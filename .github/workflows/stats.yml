name: Real Stats Refresh
on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: '15 4 * * *'
  workflow_dispatch:

jobs:
  refresh:
    runs-on: ubuntu-latest
    env:
      GH_LOGIN: jeancecilia
    steps:
      - uses: actions/checkout@v4

      - name: Fetch real stats via GraphQL
        id: fetch
        shell: bash
        run: |
          cat > query.json <<'Q'
          {
            "query": "query($login:String!){ user(login:$login){ contributionsCollection{ totalCommitContributions restrictedContributionsCount totalPullRequestContributions totalIssueContributions } pullRequests{ totalCount } issues{ totalCount } repositories(privacy: PUBLIC){ totalCount } } }",
            "variables": {"login": "$GH_LOGIN"}
          }
          Q
          RESP=$(curl -s -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/json" -d @query.json https://api.github.com/graphql)
          echo "API Response:"
          echo "$RESP" | head -c 4000
          COMMITS=$(echo "$RESP" | jq -r '.data.user.contributionsCollection.totalCommitContributions + .data.user.contributionsCollection.restrictedContributionsCount')
          PRS=$(echo "$RESP" | jq -r '.data.user.pullRequests.totalCount')
          ISSUES=$(echo "$RESP" | jq -r '.data.user.issues.totalCount')
          REPOS=$(echo "$RESP" | jq -r '.data.user.repositories.totalCount')
          echo "commits=$COMMITS" >> $GITHUB_OUTPUT
          echo "prs=$PRS" >> $GITHUB_OUTPUT
          echo "issues=$ISSUES" >> $GITHUB_OUTPUT
          echo "repos=$REPOS" >> $GITHUB_OUTPUT

      - name: Inject numbers into README and Pages
        shell: bash
        run: |
          COMMITS='${{ steps.fetch.outputs.commits }}'
          PRS='${{ steps.fetch.outputs.prs }}'
          ISSUES='${{ steps.fetch.outputs.issues }}'
          REPOS='${{ steps.fetch.outputs.repos }}'
          TS="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          # README markers
          sed -i.bak -E "s/(<!--stat:commits-->).*(<!--\/stat:commits-->)/\1${COMMITS}\2/" README.md || true
          sed -i.bak -E "s/(<!--stat:prs-->).*(<!--\/stat:prs-->)/\1${PRS}\2/" README.md || true
          sed -i.bak -E "s/(<!--stat:issues-->).*(<!--\/stat:issues-->)/\1${ISSUES}\2/" README.md || true
          sed -i.bak -E "s/(<!--stat:repos-->).*(<!--\/stat:repos-->)/\1${REPOS}\2/" README.md || true
          sed -i.bak -E "s/<!--updated: .*-->/<!--updated: ${TS}-->/" README.md || true
          rm -f README.md.bak
          # docs markers
          sed -i.bak -E "s/(<!--stat:commits-->).*(<!--\/stat:commits-->)/\1${COMMITS}\2/" docs/index.html || true
          sed -i.bak -E "s/(<!--stat:prs-->).*(<!--\/stat:prs-->)/\1${PRS}\2/" docs/index.html || true
          sed -i.bak -E "s/(<!--stat:issues-->).*(<!--\/stat:issues-->)/\1${ISSUES}\2/" docs/index.html || true
          sed -i.bak -E "s/(<!--stat:repos-->).*(<!--\/stat:repos-->)/\1${REPOS}\2/" docs/index.html || true
          sed -i.bak -E "s/<!--updated: .*-->/<!--updated: ${TS}-->/" docs/index.html || true
          rm -f docs/index.html.bak

      - name: Commit changes if updated
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff --cached --quiet || git commit -m "chore(stats): refresh live stats from GraphQL"
      - name: Push
        run: git push
